import tkinter as tk
from tkinter import messagebox
import pandas as pd
from datetime import datetime
import os

# Create Main Window
root = tk.Tk()
root.title("Cloud Based Attendance System")
root.geometry("900x600")
root.configure(bg="white")

subject_name = tk.StringVar()
enrollment = tk.StringVar()
student_name = tk.StringVar()

# Directory to save files
if not os.path.exists('AttendanceSheets'):
    os.makedirs('AttendanceSheets')

# Functions
def enter_subject():
    sub = subject_name.get()
    if sub:
        messagebox.showinfo("Success", f"Subject '{sub}' entered successfully!")
    else:
        messagebox.showwarning("Warning", "Please enter a subject name!")

def fill_attendance():
    sub = subject_name.get()
    if sub:
        now = datetime.now()
        data = {'Enrollment': ['201295', '201345', '211470'],
                'Name': ['Sagnik', 'Mehta', 'Shant'],
                'Date': [now.strftime("%Y-%m-%d")] * 3,
                'Time': [now.strftime("%H:%M:%S")] * 3}
        df = pd.DataFrame(data)
        df.to_csv(f'AttendanceSheets/{sub}_attendance.csv', index=False)
        messagebox.showinfo("Success", "Attendance filled successfully!")
    else:
        messagebox.showwarning("Warning", "Please enter a subject name first!")

def manually_fill_attendance():
    new_win = tk.Toplevel(root)
    new_win.title("Manually Fill Attendance")
    new_win.geometry("500x400")
    new_win.configure(bg="white")

    tk.Label(new_win, text="Enter Enrollment", bg="white", font=("Arial", 12)).pack(pady=5)
    enrollment_entry = tk.Entry(new_win, textvariable=enrollment, bg="yellow", font=("Arial", 12))
    enrollment_entry.pack()

    tk.Label(new_win, text="Enter Student Name", bg="white", font=("Arial", 12)).pack(pady=5)
    student_entry = tk.Entry(new_win, textvariable=student_name, bg="yellow", font=("Arial", 12))
    student_entry.pack()

    def save_manual_entry():
        sub = subject_name.get()
        if sub and enrollment.get() and student_name.get():
            now = datetime.now()
            data = {'Enrollment': [enrollment.get()],
                    'Name': [student_name.get()],
                    'Date': [now.strftime("%Y-%m-%d")],
                    'Time': [now.strftime("%H:%M:%S")]}
            file_path = f'AttendanceSheets/{sub}_attendance.csv'
            if os.path.exists(file_path):
                df_existing = pd.read_csv(file_path)
                df_new = pd.DataFrame(data)
                df_combined = pd.concat([df_existing, df_new], ignore_index=True)
                df_combined.to_csv(file_path, index=False)
            else:
                df_new = pd.DataFrame(data)
                df_new.to_csv(file_path, index=False)
            messagebox.showinfo("Success", "Manual Attendance Saved!")
        else:
            messagebox.showwarning("Warning", "Fill all details first!")

    tk.Button(new_win, text="Enter Data", command=save_manual_entry, bg="green", fg="white").pack(pady=10)
    tk.Button(new_win, text="Convert to CSV", command=save_manual_entry, bg="red", fg="white").pack(pady=5)

def check_sheets():
    sub = subject_name.get()
    file_path = f'AttendanceSheets/{sub}_attendance.csv'
    if os.path.exists(file_path):
        os.system(f'start excel "{file_path}"')
    else:
        messagebox.showerror("Error", "Attendance sheet not found!")

# Layout
tk.Label(root, text="Cloud Based Attendance System", font=("Helvetica", 24, "bold"), bg="cyan").pack(pady=20)

tk.Button(root, text="Enter Subject", command=enter_subject, bg="blue", fg="white", width=20, height=2).place(x=50, y=150)
tk.Entry(root, textvariable=subject_name, bg="yellow", font=("Arial", 12)).place(x=250, y=160)

tk.Button(root, text="Fill Attendance", command=fill_attendance, bg="deeppink", fg="white", width=20, height=2).place(x=50, y=250)
tk.Button(root, text="Manually Fill Attendance", command=manually_fill_attendance, bg="lightgreen", width=20, height=2).place(x=300, y=250)

tk.Button(root, text="Check Register students", command=check_sheets, bg="cyan", fg="black", width=20, height=2).place(x=550, y=250)

root.mainloop()
